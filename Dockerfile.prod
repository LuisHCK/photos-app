FROM python:alpine AS builder
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN mkdir /opt/app
WORKDIR /opt/app
RUN pip install --upgrade pip
COPY requirements.txt /opt/app

RUN pip wheel --no-cache-dir --no-deps --wheel-dir /opt/app/wheels -r requirements.txt

# Final 

FROM python:alpine

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN apk add --no-cache netcat-openbsd

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/photos
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/uploads
RUN mkdir $APP_HOME/collected_static
WORKDIR $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME/

# install dependencies
COPY --from=builder /opt/app/wheels /wheels
COPY --from=builder /opt/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY --chown=app:app . $APP_HOME

RUN chmod +x  $APP_HOME/docker/entrypoint.prod.sh

# change to the app user
USER app

# run entrypoint
ENTRYPOINT ["/home/app/photos/docker/entrypoint.prod.sh"]
